src/core/engine/engine.cpp    get_bool("skip", false)
src/core/engine/engine.cpp    get("type")
src/core/engine/engine.cpp    get("type")
src/core/engine/engine.cpp    get("type")
src/core/engine/engine.cpp    get("devices")
src/core/engine/engine.cpp    get_array("devices")
src/core/engine/engine.cpp    get_bool("multithreaded", true)
src/core/engine/engine.cpp    get_int("worker threads", 4)
src/core/engine/engine.cpp    get_bool("verbose", false)
src/core/engine/engine.cpp    get_bool("learning flag", true)
src/core/engine/engine.cpp    get_bool("suppress output", false)
src/core/engine/engine.cpp    get_int("environment rate", 1)
src/core/engine/engine.cpp    get_float("refresh rate", FLT_MAX)
src/core/engine/engine.cpp    get_int("iterations", 1)
src/core/engine/instruction.cpp    get_child("init config", nullptr)
src/core/engine/instruction.cpp    get("type", "normal")
src/core/engine/instruction.h    get_child("init config")
src/core/engine/instruction.h    get_float("value", 1.0)
src/core/engine/instruction.h    get_child("init config")
src/core/engine/instruction.h    get_float("min", 1.0)
src/core/engine/instruction.h    get_float("max", 1.0)
src/core/engine/instruction.h    get_child("init config")
src/core/engine/instruction.h    get_float("mean", 1.0)
src/core/engine/instruction.h    get_float("std dev", 0.1)
src/core/engine/instruction.h    get_child("init config")
src/core/engine/instruction.h    get_float("value", 20)
src/core/engine/instruction.h    get_float("rate", 1)
src/core/engine/instruction.h    get_bool("random", "false")
src/core/io/environment.cpp    get_child_array("modules")
src/core/io/environment.cpp    get("structure", "")
src/core/io/environment.cpp    get("layer", "")
src/core/io/environment.cpp    get("type", "")
src/core/io/environment.h    get_child_array("modules")
src/core/io/impl/callback_module.cpp    get("function")
src/core/io/impl/callback_module.cpp    get_int("id", 0)
src/core/io/impl/callback_module.cpp    get_bool("input", false)
src/core/io/impl/callback_module.cpp    get_bool("expected", false)
src/core/io/impl/callback_module.cpp    get_bool("output", false)
src/core/io/impl/csv_module.cpp    get("filename", "")
src/core/io/impl/csv_module.cpp    get_int("offset", 0)
src/core/io/impl/csv_module.cpp    get_float("normalization", 1)
src/core/io/impl/csv_module.cpp    get_int("exposure", 1)
src/core/io/impl/csv_module.cpp    get_int("epochs", 1)
src/core/io/impl/dsst_module.cpp    get_int("columns", 18)
src/core/io/impl/dsst_module.cpp    get_int("rows", 8)
src/core/io/impl/dsst_module.cpp    get_int("cell size", 8)
src/core/io/impl/dsst_module.cpp    get_bool("input", false)
src/core/io/impl/dsst_module.cpp    get_bool("expected", false)
src/core/io/impl/dsst_module.cpp    get_bool("output", false)
src/core/io/impl/dsst_module.cpp    get_int("rows", 8)
src/core/io/impl/dsst_module.cpp    get_int("columns", 18)
src/core/io/impl/dsst_module.cpp    get_int("cell size", 8)
src/core/io/impl/dummy_module.h    get_bool("input", false)
src/core/io/impl/dummy_module.h    get_bool("expected", false)
src/core/io/impl/dummy_module.h    get_bool("output", false)
src/core/io/impl/image_input_module.cpp    get("filename", "")
src/core/io/impl/image_input_module.cpp    get_float("scale", 1)
src/core/io/impl/image_input_module.cpp    get("channel", "gray")
src/core/io/impl/periodic_input_module.cpp    get_float("value", 1.0)
src/core/io/impl/periodic_input_module.cpp    get_float("min", 0.0)
src/core/io/impl/periodic_input_module.cpp    get_float("max", 1.0)
src/core/io/impl/periodic_input_module.cpp    get_float("fraction", 1.0)
src/core/io/impl/periodic_input_module.cpp    get_bool("random", false)
src/core/io/impl/periodic_input_module.cpp    get_int("row border", 0)
src/core/io/impl/periodic_input_module.cpp    get_int("column border", 0)
src/core/io/impl/periodic_input_module.cpp    get_int("border", 0)
src/core/io/impl/periodic_input_module.cpp    get_float("std dev", 1.0)
src/core/io/impl/periodic_input_module.cpp    get_bool("normalize", true)
src/core/io/impl/periodic_input_module.cpp    get_int("peaks", 1)
src/core/io/impl/print_output_module.cpp    get_int("history_length", 1)
src/core/io/impl/print_rate_module.cpp    get_int("window", 100)
src/core/io/impl/saccade_module.cpp    get_bool("input", false)
src/core/io/impl/saccade_module.cpp    get_bool("expected", false)
src/core/io/impl/saccade_module.cpp    get_bool("output", false)
src/core/io/impl/socket_module.cpp    get_bool("input", false)
src/core/io/impl/socket_module.cpp    get_bool("expected", false)
src/core/io/impl/socket_module.cpp    get_bool("output", false)
src/core/io/impl/socket_module.cpp    get_int("port", 11111)
src/core/io/impl/socket_module.cpp    get("ip", "192.168.0.180")
src/core/io/impl/visualizer_module.cpp    get_bool("input", false)
src/core/io/impl/visualizer_module.cpp    get_bool("expected", false)
src/core/io/impl/visualizer_module.cpp    get_bool("output", false)
src/core/io/impl/visualizer_module.cpp    get_bool("input", false)
src/core/io/impl/visualizer_module.cpp    get_bool("expected", false)
src/core/io/impl/visualizer_module.cpp    get_bool("output", false)
src/core/io/module.cpp    get_child_array("layers")
src/core/io/module.cpp    get("structure")
src/core/io/module.cpp    get("layer")
src/core/io/module.cpp    get_bool("verbose", false)
src/core/io/module.cpp    get_int("delay", 0)
src/core/io/module.cpp    get_int("cutoff", 0)
src/core/io/module.cpp    get_int("rate", 1)
src/core/io/module.cpp    get("type")
src/core/io/module.cpp    get("type")
src/core/io/module.cpp    get("type")
src/core/io/module.cpp    get("structure")
src/core/io/module.cpp    get("layer")
src/core/io/module.h    get("type", "")
src/core/io/module.h    get_child_array("layers")
src/core/network/connection_config.cpp    get_int("row field size", 0)
src/core/network/connection_config.cpp    get_int("column field size", 0)
src/core/network/connection_config.cpp    get_int("row stride", 1)
src/core/network/connection_config.cpp    get_int("column stride", 1)
src/core/network/connection_config.cpp    get_int("row spacing", 1)
src/core/network/connection_config.cpp    get_int("column spacing", 1)
src/core/network/connection_config.cpp    get_int("row offset", 0)
src/core/network/connection_config.cpp    get_int("row offset", 0)
src/core/network/connection_config.cpp    get_bool("wrap", false)
src/core/network/connection_config.cpp    get_int("field size", 0)
src/core/network/connection_config.cpp    get_int("stride", 0)
src/core/network/connection_config.cpp    get_int("spacing", 0)
src/core/network/connection_config.cpp    get_int("offset", 0)
src/core/network/connection_config.cpp    get_int("from row start", 0)
src/core/network/connection_config.cpp    get_int("from row end", 0)
src/core/network/connection_config.cpp    get_int("to row start", 0)
src/core/network/connection_config.cpp    get_int("to row end", 0)
src/core/network/connection_config.cpp    get_int("from column start", 0)
src/core/network/connection_config.cpp    get_int("from column end", 0)
src/core/network/connection_config.cpp    get_int("to column start", 0)
src/core/network/connection_config.cpp    get_int("to column end", 0)
src/core/network/connection_config.cpp    get("name", "")
src/core/network/connection_config.cpp    get("from layer", "")
src/core/network/connection_config.cpp    get("to layer", "")
src/core/network/connection_config.cpp    get("dendrite", "root")
src/core/network/connection_config.cpp    get_bool("plastic", true)
src/core/network/connection_config.cpp    get_int("delay", 0)
src/core/network/connection_config.cpp    get_float("max weight", 1.0)
src/core/network/connection_config.cpp    get("type", "fully connected")
src/core/network/connection_config.cpp    get("opcode", "add")
src/core/network/connection_config.cpp    get_bool("sparse", false)
src/core/network/connection_config.cpp    get_bool("convolutional", false)
src/core/network/connection_config.cpp    get_child("arborized config")
src/core/network/connection_config.cpp    get_child("subset config")
src/core/network/connection_config.cpp    get_child("weight config")
src/core/network/layer.cpp    get_child_array("dendrites")
src/core/network/layer.cpp    get_bool("second order", false)
src/core/network/layer.cpp    get("name")
src/core/network/layer.cpp    get("opcode", "add")
src/core/network/layer.cpp    get_bool("second order", false)
src/core/network/layer.cpp    get_float("init", 0.0)
src/core/network/layer.cpp    get_child_array("children")
src/core/network/layer_config.cpp    get("name", "")
src/core/network/layer_config.cpp    get("neural model", "")
src/core/network/layer_config.cpp    get("image")
src/core/network/layer_config.cpp    get_int("rows", 0)
src/core/network/layer_config.cpp    get("image")
src/core/network/layer_config.cpp    get_int("columns", 0)
src/core/network/layer_config.cpp    get_bool("plastic", false)
src/core/network/layer_config.cpp    get_bool("global", false)
src/core/network/layer_config.cpp    get("name")
src/core/network/layer_config.cpp    get_child_array("children")
src/core/network/layer_config.cpp    get_child_array("dendrites")
src/core/network/network.cpp    get("name", "")
src/core/network/network.cpp    get("name", "")
src/core/network/network.cpp    get("from structure")
src/core/network/network.cpp    get("to structure")
src/core/network/network_config.cpp    get_child_array("structures")
src/core/network/network_config.cpp    get_child_array("connections")
src/core/network/structure_config.cpp    get("name", "")
src/core/network/structure_config.cpp    get("type", "parallel")
src/core/network/structure_config.cpp    get_child_array("layers")
src/core/report.cpp    get("iterations")
src/core/report.cpp    get_float("total time", 0.0)
src/core/report.cpp    get_float("average time", 0.0)
src/core/report.cpp    get_float("fps", 0.0)
src/core/report.cpp    get("network bytes")
src/core/report.cpp    get("state buffer bytes")
src/core/report.cpp    get("engine buffer bytes")
src/core/report.cpp    get_child_array("layer reports")
src/core/report.cpp    get_child_array("layer reports")
src/core/state/impl/game_of_life_attributes.cpp    get_parameter("survival_min", "2")
src/core/state/impl/game_of_life_attributes.cpp    get_parameter("survival_max", "3")
src/core/state/impl/game_of_life_attributes.cpp    get_parameter("birth_min", "3")
src/core/state/impl/game_of_life_attributes.cpp    get_parameter("birth_max", "3")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("direct", "false")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("params", "regular")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("conductance", "1.0")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("learning rate", "0.1")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("short term plasticity", "true")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("short term plasticity tau", "5000")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("myelinated", "false")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("random delay", "false")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("random delay", "0")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("neuron spacing", "0.1")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("neuron spacing", "0.1")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("x offset", "0.0")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("y offset", "0.0")
src/core/state/impl/izhikevich_attributes.cpp    get_parameter("cap delay", "false")
src/core/state/impl/nvm_attributes.cpp    get_parameter("tonic", "0.0")
src/core/state/impl/oscillator_attributes.cpp    get_parameter("tonic", "0.0")
src/core/state/impl/oscillator_attributes.cpp    get_parameter("tau", "0.1")
src/core/state/impl/oscillator_attributes.cpp    get_parameter("decay", "0.1")
src/core/state/impl/relay_attributes.cpp    get_parameter("ramp", "false")
src/core/state/impl/sample_attributes.cpp    get_parameter("connection variable", "1.0")
src/core/state/impl/sample_attributes.cpp    get_parameter("second weights", "false")
src/core/state/impl/sample_attributes.cpp    get_parameter("value", "1.0")
src/core/state/impl/sine_generator_attributes.cpp    get_parameter("frequency", "10")
src/core/state/impl/som_attributes.cpp    get_parameter("rbf scale", "1")
src/core/state/impl/som_attributes.cpp    get_parameter("learning rate", "0.01")
src/core/state/impl/som_attributes.cpp    get_parameter("neighbor learning rate", "0.001")
src/core/state/impl/som_attributes.cpp    get_parameter("neighborhood size", "2")
src/core/state/weight_matrix.cpp    get_float("weight", 1.0)
src/core/state/weight_matrix.cpp    get_float("fraction", 1.0)
src/core/state/weight_matrix.cpp    get_float("max weight", conn->max_weight)
src/core/state/weight_matrix.cpp    get_float("min weight", 0.0)
src/core/state/weight_matrix.cpp    get_float("fraction", 1.0)
src/core/state/weight_matrix.cpp    get_float("mean", 1.0)
src/core/state/weight_matrix.cpp    get_float("std dev", 0.3)
src/core/state/weight_matrix.cpp    get_float("fraction", 1.0)
src/core/state/weight_matrix.cpp    get_float("mean", 1.0)
src/core/state/weight_matrix.cpp    get_float("std dev", 0.3)
src/core/state/weight_matrix.cpp    get_float("fraction", 1.0)
src/core/state/weight_matrix.cpp    get_float("exponent", 1.5)
src/core/state/weight_matrix.cpp    get_float("fraction", 1.0)
src/core/state/weight_matrix.cpp    get_float("max weight", conn->max_weight)
src/core/state/weight_matrix.cpp    get_float("min weight", 0.0)
src/core/state/weight_matrix.cpp    get_float("row radius", 0)
src/core/state/weight_matrix.cpp    get_float("column radius", 0)
src/core/state/weight_matrix.cpp    get_float("row diameter", 0)
src/core/state/weight_matrix.cpp    get_float("column diameter", 0)
src/core/state/weight_matrix.cpp    get_float("radius", 0)
src/core/state/weight_matrix.cpp    get_float("diameter", 0)
src/core/state/weight_matrix.cpp    get_bool("invert", false)
src/core/state/weight_matrix.cpp    get_float("value", 0.0)
src/core/state/weight_matrix.cpp    get("weight string", "")
src/core/state/weight_matrix.cpp    get("callback")
src/core/state/weight_matrix.cpp    get_int("id", 0)
src/core/state/weight_matrix.cpp    get("distance callback")
src/core/state/weight_matrix.cpp    get_int("id", 0)
src/core/state/weight_matrix.cpp    get_float("from spacing", 1.0)
src/core/state/weight_matrix.cpp    get_float("to spacing", 1.0)
src/core/state/weight_matrix.cpp    get_float("x offset", 0.0)
src/core/state/weight_matrix.cpp    get_float("y offset", 0.0)
src/core/state/weight_matrix.cpp    get_float("fraction", 1.0)
src/core/state/weight_matrix.cpp    get("type", "flat")
src/core/state/weight_matrix.cpp    get_child("circular mask")
src/core/state/weight_matrix.cpp    get_child_array("circular mask")
src/core/state/weight_matrix.cpp    get_bool("diagonal", true)
